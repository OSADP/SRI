/**
 * Creates an instance of the Vehicle Model
 * @constructor
 * @this {Vehicle}
 * @param {attributes} defined in defaults
 * @author rothrob
 */
App.Model.Vehicle = Backbone.Model.extend({
	
	defaults : {
		licensePlate : null,
		state : null,
		dotNumber : null,
		safetyDotNumber : null,
		weight : null,
		inspectionNumber : null,
		inspectionDate : null,
		carrierName : null,
		carrierId : null,
		issScore : null,
		pass : null,
		driverName : null,
		cdlNumber : null,
		lastInspectionLocation: null,
		lastInspectionDate: null,
		lastInspectionStatus : null,
		// These are child models a.k.a. modelception
		safer : new App.Model.SaferData,
		prePass : new App.Model.PrePass,
		wim : new App.Model.Wim,
		staticScale : new App.Model.StaticScale
	},
	/**
	 * This is for parsing the model's attributes,
	 * we're using this to add a model within this
	 * model, instead of just a JS Object
	 * @private
	 * @this {Wim}
	 * @param {attributes} this accepts the model's attributes
	 * and parses it according to the process inside the function
	 * @returns the model's attributes
	 * @author rothrob
	 */
	parse : function( attrs ) {
		/* 
		 * These if statements will check for the availability
		 * of each objects and then construct their respective models
		 * and copy it back into our Vehicle model
		 */
		if(attrs.safer) {
			attrs.safer = new App.Model.SaferData(attrs.safer);
		}
		if(attrs.prePass) {
			attrs.prePass = new App.Model.PrePass(attrs.prePass);
		}
		if(attrs.wim) {
			attrs.wim = new App.Model.Wim(attrs.wim);
		}
		if(attrs.staticScale) {
			attrs.staticScale = new App.Model.StaticScale(attrs.staticScale);
		}
		if(attrs.driveWyze) {
			attrs.driveWyze = new App.Model.Drivewyze(attrs.driveWyze);
		}
		// don't forget to return the attributes
		// to the parent model
		return attrs;
	},
	
	urlRoot : "/DashCon/dashboard/resource/data.json"
	
});