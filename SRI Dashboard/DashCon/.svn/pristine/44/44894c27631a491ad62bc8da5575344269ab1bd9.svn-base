package sri.data.ws;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.UriInfo;

import sri.data.Device;
import sri.data.DeviceType;
import sri.data.dao.DeviceDao;
import sri.data.dao.DeviceDaoImpl;
import sri.data.dao.DeviceTypeDao;
import sri.data.dao.DeviceTypeDaoImpl;

@Path("deviceType")
public class DeviceTypeResource {
	
	@Context
	protected UriInfo uriInfo;
	@Context
	protected HttpServletRequest req;
	@Context
	protected HttpServletResponse resp;
	
	private DeviceTypeDao deviceTypeDao;
	
	@GET
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public List<DeviceType> getAllDeviceTypes() {
		deviceTypeDao = new DeviceTypeDaoImpl();
    	List<DeviceType> deviceTypes = deviceTypeDao.getAllDeviceTypes();
    	return deviceTypes;
    }
	
	// get all devices by typeId
	@GET @Path("getAllDeviceByTypeIds") 
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
	@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public List<DeviceType> getAllDeviceTypeByIds() {
		deviceTypeDao = new DeviceTypeDaoImpl();
    	List<DeviceType> deviceTypes = deviceTypeDao.getAllDeviceTypeIds();
    	return deviceTypes;
    }
	
	// get all devices by vendor
	@GET @Path("getAllDeviceTypeByVendor/{vendor}")
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
	@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public List<DeviceType> getAllDeviceTypeByVendor(@PathParam("vendor") String vendor) {
		deviceTypeDao = new DeviceTypeDaoImpl();
    	List<DeviceType> deviceTypes = deviceTypeDao.getAllDeviceTypesByVendor(vendor);
    	return deviceTypes;
    }
	
	// get all device types by siteId
	@GET @Path("getAllDeviceTypesBySiteId/{siteId}")
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
	@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public List<DeviceType> getAllDeviceTypesBySite(@PathParam("siteId")String siteId) {
		deviceTypeDao = new DeviceTypeDaoImpl();
    	List<DeviceType> deviceTypes = deviceTypeDao.getAllDeviceTypesBySite(siteId);
    	return deviceTypes;
    }
	
	// get all device type ids
	@GET @Path("getAllDeviceTypeIds")
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
	@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public List<DeviceType> getAllDeviceTypeIds() {
		deviceTypeDao = new DeviceTypeDaoImpl();
    	List<DeviceType> deviceTypes = deviceTypeDao.getAllDeviceTypeIds();
    	return deviceTypes;
    }
	
	// get device by device type
	@GET @Path("getDeviceByDeviceType/{type}")
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
	@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public DeviceType getDeviceByDeviceType(@PathParam("type") String type) {
		deviceTypeDao = new DeviceTypeDaoImpl();
    	DeviceType deviceTypes = deviceTypeDao.getDeviceByDeviceType(type);
    	return deviceTypes;
    }
	
	// get deviceType by type Id
	@GET @Path("getDeviceTypeByTypeId/{typeId}")
	@Consumes({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
	@Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public DeviceType getDeviceTypeByTypeId(@PathParam("typeId") String typeId) {
		deviceTypeDao = new DeviceTypeDaoImpl();
    	DeviceType deviceTypes = deviceTypeDao.getDeviceTypeByTypeId(typeId);
    	return deviceTypes;
    }
		
	
}
